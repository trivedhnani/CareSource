package edu.neu.csye6200;
import java.awt.Container;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import com.opencsv.CSVWriter;

/**
 * Revisit Patient UI
 * @author Pritesh Chauhan
 *
 * Field Validation & Code documentation
 * @author Priyanka Maheshwari
 */

public class RevisitPatientFormView extends JFrame implements ActionListener {
	private Container c; 
    private JLabel title; 
    private JLabel name; 
    private JTextField tname; 
    private JLabel ino; 
    private JTextField tmno; 
    private JButton sub; 
    private JButton reset;
    private JButton back;
    private JButton check; 
    private JTextArea tout; 
    private JLabel res; 
    private JTextArea resadd; 
    private JLabel ward; 
    private JRadioButton normal; 
    private JRadioButton emergency; 
    private JRadioButton child; 
    private ButtonGroup gengp;
    
    String COMMA_DELIMITER = ",";
    String NEW_LINE_SEPARATOR = "\n";
	String csvFile = ".\\developer.csv";
	FileWriter fileWriter;
	private String patientWard;
	private String[] array = new String[9];
    
    List<String> x = new ArrayList<String>();
    String org;
    String dest;
    
	public RevisitPatientFormView() {
		setTitle("Patient ReVisiting Form"); 
        setBounds(500, 150, 900, 600); 
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
        setResizable(false); 
  
        c = getContentPane(); 
        c.setLayout(null); 
        
        // Title
        title = new JLabel("Revisit Patient Form"); 
        title.setFont(new Font("Arial", Font.PLAIN, 30)); 
        title.setSize(300, 30); 
        title.setLocation(300, 30); 
        c.add(title); 
        
        // Name label
        name = new JLabel("Name"); 
        name.setFont(new Font("Arial", Font.PLAIN, 20)); 
        name.setSize(100, 20); 
        name.setLocation(120, 100); 
        c.add(name); 
  
        // Name TextArea
        tname = new JTextField(); 
        tname.setFont(new Font("Arial", Font.PLAIN, 15)); 
        tname.setSize(190, 20); 
        tname.setLocation(200, 100); 
        c.add(tname); 
  
        // Insurance Number Label
        ino = new JLabel("Insurance Number"); 
        ino.setFont(new Font("Arial", Font.PLAIN, 20)); 
        ino.setSize(200, 20); 
        ino.setLocation(120, 150); 
        c.add(ino); 
  
        // Insurance Number TextArea
        tmno = new JTextField(); 
        tmno.setFont(new Font("Arial", Font.PLAIN, 15)); 
        tmno.setSize(190, 20); 
        tmno.setLocation(200, 175); 
        c.add(tmno); 
        
        // Ward Label
        ward = new JLabel("Ward"); 
        ward.setFont(new Font("Arial", Font.PLAIN, 20)); 
        ward.setSize(100, 40); 
        ward.setLocation(120, 200); 
        c.add(ward); 
  
        // Normal Ward Button
        normal = new JRadioButton("Normal"); 
        normal.setFont(new Font("Arial", Font.PLAIN, 15)); 
        normal.setSelected(true); 
        normal.setSize(75, 40); 
        normal.setLocation(200, 200); 
        c.add(normal); 
  
        // Emergency Ward Button
        emergency = new JRadioButton("Emergency"); 
        emergency.setFont(new Font("Arial", Font.PLAIN, 15)); 
        emergency.setSelected(false); 
        emergency.setSize(100, 40); 
        emergency.setLocation(280, 200); 
        c.add(emergency); 
        
        // Child Ward Button
        child = new JRadioButton("Child"); 
        child.setFont(new Font("Arial", Font.PLAIN, 15)); 
        child.setSelected(false); 
        child.setSize(100, 40); 
        child.setLocation(380, 200); 
        c.add(child); 
        
        gengp = new ButtonGroup(); 
        gengp.add(normal); 
        gengp.add(emergency);
        gengp.add(child);
        
        check = new JButton("Check"); 
        check.setFont(new Font("Arial", Font.PLAIN, 15)); 
        check.setSize(100, 20); 
        check.setLocation(220, 250); 
        check.addActionListener(this); 
        c.add(check); 
        
        // Submit Button
        sub = new JButton("Submit"); 
        sub.setFont(new Font("Arial", Font.PLAIN, 15)); 
        sub.setSize(100, 20); 
        sub.setLocation(120, 300); 
        sub.addActionListener(this); 
        sub.setEnabled(false);
        c.add(sub); 
  
        // Reset all the fields
        reset = new JButton("Reset"); 
        reset.setFont(new Font("Arial", Font.PLAIN, 15)); 
        reset.setSize(100, 20); 
        reset.setLocation(220, 300); 
        reset.addActionListener(this); 
        c.add(reset); 
        
        // Directs to the previous page
        back = new JButton("Go Back"); 
        back.setFont(new Font("Arial", Font.PLAIN, 15)); 
        back.setSize(100, 20); 
        back.setLocation(320, 300); 
        back.addActionListener(this); 
        c.add(back);
        
        tout = new JTextArea(); 
        tout.setFont(new Font("Arial", Font.PLAIN, 15)); 
        tout.setSize(300, 400); 
        tout.setLocation(500, 100); 
        tout.setLineWrap(true); 
        tout.setEditable(false); 
        c.add(tout); 
  
        res = new JLabel(""); 
        res.setFont(new Font("Arial", Font.PLAIN, 20)); 
        res.setSize(500, 25); 
        res.setLocation(100, 500); 
        c.add(res); 
  
        resadd = new JTextArea(); 
        resadd.setFont(new Font("Arial", Font.PLAIN, 15)); 
        resadd.setSize(200, 75); 
        resadd.setLocation(580, 175); 
        resadd.setLineWrap(true); 
        c.add(resadd); 
  
        setVisible(true); 
	}
	
	public void actionPerformed(ActionEvent e) {
//		sub.setEnabled(false);
		if (e.getSource() == check) {
			System.out.println("Inside Check");
			String ward1 = "";
			
			if (normal.isSelected()) {
				patientWard = "Normal";
			}
			else if (child.isSelected()) {
				patientWard = "Child";
			}
			else {
				patientWard = "Emergency";
			}
			
			RevisitPatientFormModel rpfm = new RevisitPatientFormModel();
			array = rpfm.readFileRevisitPatient(tname.getText(), tmno.getText(), patientWard);		
			
			if (array[0].equals("false")) {
				JOptionPane.showMessageDialog(null,  "Patient Name or Insurance Number did not match. Please check or register as a new patient!");
				String toutCSV = "Name: "+tname.getText()+"\n"+"Insurance Number: "+tmno.getText()+"\n"+"Incorrect Information!";
				tout.setText(toutCSV);
				res.setText("Registration Unsuccessfull..");
				tname.setText("");
				tmno.setText("");
			}			
			else {
				try {
	    			String dest = array[3]+","+array[4]+","+array[5]+","+array[6]+","+array[1]+","+array[7]+","+array[2];
	    			FileWriter file = new FileWriter(csvFile);
	    			System.out.println("Dest:"+dest);
	    			Collections.replaceAll(x, array[8], dest);
					CSVWriter bw = new CSVWriter(file);
	    			for(String a: x) {
	    				System.out.println("A:"+a);
	    				String[] newdata = a.split(",");
	    				System.out.println("String:"+newdata[0]);
	    				bw.writeNext(newdata);
	    			}
	    			bw.close();
	    			
				} catch (IOException e1) {
					e1.printStackTrace();
				}
				
				sub.setEnabled(true);
	                String data 
	                    = "Name : "
	                      + tname.getText() + "\n"
	                      + "Insurance Number : "
	                      + ino.getText() + "\n"; 
	                String data2="";
	            	if (normal.isSelected()) 
	                    data2 = "Ward : Normal"
	                            + "\n"; 
	                else if (child.isSelected()) 
	                    data2 = "Ward : Child"
	                            + "\n";
	                else if (emergency.isSelected()) 
	                    data2 = "Ward : Emergency"
	                            + "\n";
	                System.out.println(tname.getText().trim().equals("")+"  "+ino.getText().trim().equals(""));
	                if(tname.getText().trim().equals("") || ino.getText().trim().equals("")) {
	            		tout.setText("Test"); 
	                    tout.setEditable(false);
		                res.setText("Please input all the fields..");
	            	}
	                else {
	                	WardConnect w = new WardConnect();
	                	int n = w.ConnectwithUI(tname.getText(), ward1);
	                	System.out.println("Here: "+n);
		                tout.setText(data+" "+data2); 
		                tout.setEditable(false); 
		                res.setText("Data Fetched Successfully..");
		                setVisible(false); 
		                new DoctorAssignment();
	                }
			}
			
               
		}
		else if(e.getSource() == back) {
			setVisible(false);
			new PatientCheckView();
		}
		else { 
			tname.setText("");
			tmno.setText("");
            tout.setText(""); 
            resadd.setText(""); 
        }
	}
	
}
