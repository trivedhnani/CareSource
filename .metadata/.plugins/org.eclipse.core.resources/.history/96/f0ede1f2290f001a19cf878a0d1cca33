package edu.neu.csye6200;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class ExitForm extends JFrame {
private JPanel pnl;
private TableModel model;
private TableModel model1;
private JTable table;
private JTextField txtFE;
private JButton btnSetFE;
private JButton btnSetFE1;
private JButton btn;
private ActionListener al,a2,a3;
private JLabel res;
String rstr = "";
    String[][] data2;
  public ExitForm() throws FileNotFoundException {
    setDefaultCloseOperation(EXIT_ON_CLOSE);
   
    System.out.println("Inside Exit");
    String[][] data1 = displayTable();

    String[] columnNames = { "Patient's Name", "Insurance Number", "Doctor Id", "Doctor FName", "Doctor LName", "Specialist", "WardName", "Bed Number"};
    model = new DefaultTableModel(data1, columnNames);
    table = new JTable(model);
    getContentPane().add(new JScrollPane(table));
    pnl = new JPanel();
    pnl.add(new JLabel("Enter Name who is getting discharged:"));
    txtFE = new JTextField(25);
    pnl.add(txtFE);
    btnSetFE = new JButton("Discharge");
    btn = new JButton("Go Back");
    a3 = new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent j) {
			if(j.getSource() == btn) {
				setVisible(false);
				new PatientCheckView();
			}
			
		}
	};
	btn.addActionListener(a3);
	
    res = new JLabel("");
    res.setFont(new Font("Arial", Font.PLAIN, 20));
    if(data1 == null)
    	btnSetFE.setEnabled(false);
 
    al = new ActionListener() {
      public void actionPerformed(ActionEvent e) {
// Action on discharge
     if(e.getSource() == btnSetFE) {
     rstr = Remove.demo(txtFE.getText());
     System.out.println(rstr);
     pnl.add(res);
     System.out.println(rstr);
     res.setText(rstr);
     try {
     data2 = displayTable();
} catch (FileNotFoundException e1) {
// TODO Auto-generated catch block
e1.printStackTrace();
}
   model1 = new DefaultTableModel(data2, columnNames);
             table.setModel(model1);
     }
      }
    };
    btnSetFE.addActionListener(al);
    pnl.add(btnSetFE);
    pnl.add(btn);
    getContentPane().add(pnl, BorderLayout.SOUTH);
    
    setSize(910, 610);
    setVisible(true);
  }
 
  public String[][] displayTable() throws FileNotFoundException {
	  String[] data;
	  System.out.println("Inside display");
	  Scanner scanner = new Scanner(new File(".\\main.csv"));
	  Scanner scanner1 = new Scanner(new File(".\\main.csv"));
	  int k=0;
	  while (scanner.hasNextLine()) {
//		  data = scanner.nextLine().split(",");
		  k++;
	  }
	  System.out.println("K: "+k);
	  if(k == 0)
		  return null;
	  String[][] data1 = new String[k][];
	  k=0;
	  while (scanner1.hasNextLine()) {
		  data = scanner1.nextLine().split(",");
		  data1[k] = data;
		  System.out.println(data1[k]);
		  k++;
	  }
	  for(int i=0; i<data1.length; i++)
		  for(int j=0; j<8; j++) {
			  System.out.println(data1[i][j]);
		  }
	  return data1;
  }
}