package edu.neu.csye6200;


import java.util.Arrays;
import java.util.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Files;
import java.util.Scanner;

import org.apache.commons.lang3.reflect.FieldUtils;

import com.opencsv.CSVReader;
import com.opencsv.CSVWriter;

public class DoctorFactory implements AbstractDoctorFactory {
	private static int cr;
	private static int nr;
	private static int oc;
	private static int gc;
	private static int cs;
	private static int sr;
	enum Doctorenum{
		CARDIOLOGIST,NEUROLOGIST,ONCOLOGIST,GYNOCOLOGIST,CHILDSPECIALIST,SURGEON;
	}
	
	public DoctorFactory() {
		cr=readcount("cr");
		nr=readcount("nr");
		oc=readcount("oc");
		gc=readcount("cr");
		cs=readcount("nr");
		sr=readcount("oc");
	}
	
	
	@Override
	public AbstractDoctor getObject(Doctorenum d1) {
		// TODO Auto-generated method stub
		switch(d1) {
		case CARDIOLOGIST:{ cr++;
		if(cr>3) {
			return null;}
			writecount("cr",cr);
			return new Cardiologist(readData(cr));}
		case NEUROLOGIST: { nr++;
		if(nr>6) {
			return null;}
			writecount("nr",nr);
			return new Neurologist(readData(nr));
		}
		case ONCOLOGIST: { oc++;
		if(oc>9) {
			return null;}
			writecount("oc",oc);
			return new Oncologist(readData(oc));
		}
		case GYNOCOLOGIST: { gc++;
		if(gc>12) {
			return null;}
			writecount("gc",gc);
			return new Gynocologist(readData(gc));
		}
		case CHILDSPECIALIST: { cs++;
		if(cs>15) {
			return null;}
			writecount("cs",cs);
			return new ChildSpecialist(readData(cs));
		}
		case SURGEON: { sr++;
		if(sr>=18) {
			return null;}
			writecount("sr",sr);
			return new Surgeon(readData(sr));
		}
		
		}
		return null;
	}
	public String readData(int id) {
		try(FileReader fr= new FileReader("Doctors.txt");
				BufferedReader br= new BufferedReader(fr)){
			int c=1;
			String res="";
			Scanner s= new Scanner(br);
			while(c<=id&&s.hasNext()) {
				c++;
				res=s.next();
			}
			s.close();
			return res;
		}
		catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return null;
		
	}
	public int readcount(String name) {
		try(FileReader fr= new FileReader("Doctorcount.txt");
			BufferedReader br= new BufferedReader(fr);){
			name="\""+name+"\"";
			//System.out.println(name);
			Scanner sc= new Scanner(br);
			while(sc.hasNext()) {
				String s=sc.next();
				String[] s1=s.split(",");
			//	System.out.println(s1[0]);
				if(name.equals(s1[0])) {
			//		System.out.println("true");
					String[] s2 =s1[1].split("\"");
					return Integer.parseInt(s2[1]);
				}
			}
			sc.close();
			
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	public void onExit(String name){
		
	}
	public void writecount(String name,int count) {

	try {
		File inputFile = new File("Doctorcount.txt");
		CSVReader reader = new CSVReader(new FileReader(inputFile));
		List<String[]> csvBody = reader.readAll();
		csvBody.get((count-1)/3)[1] = String.valueOf(count);
		reader.close();
		CSVWriter writer = new CSVWriter(new FileWriter(inputFile));
		writer.writeAll(csvBody);
		writer.flush();
		writer.close();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	

}
